<?php

/**
 * @file
 * phploc_result entity code.
 */

/**
 * Implements hook_entity_info().
 */
function phploc_result_entity_info() {
  return array(
    'phploc_result' => array(
      'label' => t('PHPLOC Result'),
      'entity class' => 'PhplocResult',
      'controller class' => 'PhplocResultController',
      'base table' => 'phploc_result',
      'uri callback' => 'phploc_result_uri',
      'fieldable' => TRUE,
      'entity keys' => array(
        'id' => 'prid',
      ),
      'static cache' => TRUE,
      'module' => 'phploc_result',
      'views controller class' => 'EntityDefaultViewsController',
    ),
  );
}


/**
 * Access callback.
 */
function phploc_result_access($op, $phploc_result, $account = NULL, $entity_type = NULL) {
  global $user;
  if (!isset($account)) {
    $account = $user;
  }
  switch ($op) {
    case 'create':
      return user_access('administer phploc_result entities', $account)
          || user_access('create phploc_result entities', $account);
    case 'view':
      return user_access('administer phploc_result entities', $account)
          || user_access('view phploc_result entities', $account);
    case 'edit':
      return user_access('administer phploc_result entities')
          || user_access('edit any phploc_result entities')
          || (user_access('edit own phploc_result entities') && ($task->uid == $account->uid));
  }
}


/**
 * Implements hook_permission().
 */
function phploc_result_permission() {
  $permissions = array(
    'create phploc_result entities' => array(
      'title' => t('Create phploc_result'),
      'description' => t('Allows users to create phploc_result.'),
      'restrict access' => TRUE,
    ),
    'view phploc_result entities' => array(
      'title' => t('View phploc_result'),
      'description' => t('Allows users to view phploc_result.'),
      'restrict access' => TRUE,
    ),
    'edit any phploc_result entities' => array(
      'title' => t('Edit any phploc_result'),
      'description' => t('Allows users to edit any phploc_result.'),
      'restrict access' => TRUE,
    ),
    'edit own phploc_result entities' => array(
      'title' => t('Edit own phploc_result'),
      'description' => t('Allows users to edit own phploc_result.'),
      'restrict access' => TRUE,
    ),
  );
  return $permissions;
}


/**
 * PhplocResult class.
 */
class PhplocResult extends Entity {

  /**
   * The default label.
   *
   * @return int
   *   phploc_result prid
   */
  protected function defaultLabel() {
    return $this->prid;
  }

  /**
   * The default URI.
   *
   * @return array
   *   An array containing the path to the phploc_result
   */
  protected function defaultUri() {
    return array('path' => 'phploc_result/' . $this->identifier());
  }
}


/**
 * PhplocResultController class
 */
class PhplocResultController extends EntityAPIController {

  /**
   * Create a phploc_result.
   *
   * @param array $values
   *   The values of the phploc_result object to create.
   *
   * @return
   */
  public function create(array $values = array()) {
    return parent::create($values);
  }

  public function buildContent($entity, $view_mode = 'full', $langcode = NULL, $content = array()) {
    $wrapper = entity_metadata_wrapper('phploc_result', $entity);
    return parent::buildContent($entity, $view_mode, $langcode, $content);
  }
}


/**
 * Load.
 */
function phploc_result_load($prid, $reset = FALSE) {
  $phploc_results = phploc_result_load_multiple(array($prid), array(), $reset);
  return reset($phploc_results);
}


/**
 * Load multiple based on certain conditions.
 */
function phploc_result_load_multiple($prid = array(), $conditions = array(), $reset = FALSE) {
  return entity_load('phploc_result', $prid, $conditions, $reset);
}


/**
 * Save.
 */
function phploc_result_save($phploc_result) {
  entity_save('phploc_result', $phploc_result);
}


/**
 * Delete single.
 */
function phploc_result_delete($phploc_result) {
  entity_delete('phploc_result', entity_id('phploc_result', $phploc_result));
}


/**
 * Delete multiple.
 */
function phploc_result_delete_multiple($phploc_result_ids) {
  entity_delete_multiple('phploc_result', $phploc_result_ids);
}
