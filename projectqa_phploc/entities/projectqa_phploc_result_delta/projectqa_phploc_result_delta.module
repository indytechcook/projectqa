<?php

/**
 * @file
 * projectqa_phploc_result_delta_delta entity code.
 */

/**
 * Implements hook_entity_info().
 */
function projectqa_phploc_result_delta_entity_info() {
  return array(
    'projectqa_phploc_result_delta' => array(
      'label' => t('PHPLOC Result Delta'),
      'entity class' => 'PhplocResultDelta',
      'controller class' => 'PhplocResultDeltaController',
      'base table' => 'projectqa_phploc_result_delta',
      'uri callback' => 'projectqa_phploc_result_delta_uri',
      'fieldable' => TRUE,
      'entity keys' => array(
        'id' => 'prdid',
      ),
      'static cache' => TRUE,
      'module' => 'projectqa_phploc_result_delta',
      'views controller class' => 'EntityDefaultViewsController',
    ),
  );
}


/**
 * Implements hook_entity_property_info().
 */
function projectqa_phploc_result_delta_entity_property_info() {
  $info = array();
  $properties = &$info['projectqa_phploc_result_delta']['properties'];

  $properties['prid'] = array(
    'label' => 'PHPLOC Result ID',
    'description' => t('The unique ID for the phploc result.'),
    'type' => 'integer',
    'schema field' => 'prid',
  );
  $properties['gcid'] = array(
    'label' => 'Git commit ID',
    'description' => t('The unique ID for the git commit.'),
    'type' => 'projectqa_gitcommit',
    'schema field' => 'gcid',
  );
  $properties['parent_gcid'] = array(
    'label' => 'Parent git commit ID',
    'description' => t('The unique ID for the parent git commit.'),
    'type' => 'projectqa_gitcommit',
    'schema field' => 'parent_gcid',
  );
  $properties['files_delta'] = array(
    'label' => 'Files (delta)',
    'description' => t('The number of files (delta).'),
    'type' => 'integer',
    'schema field' => 'files_delta',
  );
  $properties['loc_delta'] = array(
    'label' => 'Lines of Code (delta)',
    'description' => t('The number of lines of code (delta).'),
    'type' => 'integer',
    'schema field' => 'loc_delta',
  );
  $properties['lloc_delta'] = array(
    'label' => 'Logical lines of code (LLOC) (delta)',
    'description' => t('The number of logical lines of code (delta).'),
    'type' => 'integer',
    'schema field' => 'lloc_delta',
  );
  $properties['llocClasses_delta'] = array(
    'label' => 'LLOC in classes (delta)',
    'description' => t('The number of LLOC in classes (delta).'),
    'type' => 'integer',
    'schema field' => 'llocClasses_delta',
  );
  $properties['llocFunction_delta'] = array(
    'label' => 'LLOC in functions (delta)',
    'description' => t('The number of LLOC in functions'),
    'type' => 'integer',
    'schema field' => 'llocFunction_delta',
  );
  $properties['llocGlobal_delta'] = array(
    'label' => 'llocGlobal (delta)',
    'description' => t('llocGlobal_delta'),
    'type' => 'integer',
    'schema field' => 'llocGlobal_delta',
  );
  $properties['cloc_delta'] = array(
    'label' => 'Commented lines of code (delta)',
    'description' => t('The number of commented lines of code (delta).'),
    'type' => 'integer',
    'schema field' => 'cloc_delta',
  );
  $properties['ccn_delta'] = array(
    'label' => 'ccn (delta)',
    'description' => t('ccn_delta'),
    'type' => 'integer',
    'schema field' => 'ccn_delta',
  );
  $properties['ccnMethods_delta'] = array(
    'label' => 'ccnMethods (delta)',
    'description' => t('ccnMethods_delta'),
    'type' => 'integer',
    'schema field' => 'ccnMethods_delta',
  );
  $properties['interfaces_delta'] = array(
    'label' => 'Interfaces (delta)',
    'description' => t('The number of interfaces (delta).'),
    'type' => 'integer',
    'schema field' => 'interfaces_delta',
  );
  $properties['traits_delta'] = array(
    'label' => 'Traits (delta)',
    'description' => t('The number of traits (delta).'),
    'type' => 'integer',
    'schema field' => 'traits_delta',
  );
  $properties['classes_delta'] = array(
    'label' => 'Classes (delta)',
    'description' => t('The number of classes (delta).'),
    'type' => 'integer',
    'schema field' => 'classes_delta',
  );
  $properties['abstractClasses_delta'] = array(
    'label' => 'Abstract classes (delta)',
    'description' => t('The number of abstract classes (delta).'),
    'type' => 'integer',
    'schema field' => 'abstractClasses_delta',
  );
  $properties['concreteClasses_delta'] = array(
    'label' => 'Concrete classes (delta)',
    'description' => t('The number of concrete classes (delta).'),
    'type' => 'integer',
    'schema field' => 'concreteClasses_delta',
  );
  $properties['functions_delta'] = array(
    'label' => 'Functions (delta)',
    'description' => t('The number of functions (delta).'),
    'type' => 'integer',
    'schema field' => 'functions_delta',
  );
  $properties['namedFunctions_delta'] = array(
    'label' => 'Named functions (delta)',
    'description' => t('The number of named functions (delta).'),
    'type' => 'integer',
    'schema field' => 'namedFunctions_delta',
  );
  $properties['anonymousFunctions_delta'] = array(
    'label' => 'Anonymous functions (delta)',
    'description' => t('The number of anonymous functions (delta).'),
    'type' => 'integer',
    'schema field' => 'anonymousFunctions_delta',
  );
  $properties['methods_delta'] = array(
    'label' => 'Methods (delta)',
    'description' => t('The number of methods (delta).'),
    'type' => 'integer',
    'schema field' => 'methods_delta',
  );
  $properties['publicMethods_delta'] = array(
    'label' => 'Public methods (delta)',
    'description' => t('The number of public methods (delta).'),
    'type' => 'integer',
    'schema field' => 'publicMethods_delta',
  );
  $properties['nonPublicMethods_delta'] = array(
    'label' => 'Non-public methods (delta)',
    'description' => t('The number of non-public methods (delta).'),
    'type' => 'integer',
    'schema field' => 'nonPublicMethods_delta',
  );
  $properties['nonStaticMethods_delta'] = array(
    'label' => 'Non-static methods (delta)',
    'description' => t('The number of non-static methods (delta).'),
    'type' => 'integer',
    'schema field' => 'nonStaticMethods_delta',
  );
  $properties['staticMethods_delta'] = array(
    'label' => 'Static methods (delta)',
    'description' => t('The number of static methods (delta).'),
    'type' => 'integer',
    'schema field' => 'staticMethods_delta',
  );
  $properties['constants_delta'] = array(
    'label' => 'Constants (delta)',
    'description' => t('The number of constants (delta).'),
    'type' => 'integer',
    'schema field' => 'constants_delta',
  );
  $properties['classConstants_delta'] = array(
    'label' => 'classConstants (delta)',
    'description' => t('The number of class constants (delta).'),
    'type' => 'integer',
    'schema field' => 'classConstants_delta',
  );
  $properties['globalConstants_delta'] = array(
    'label' => 'Global constants (delta)',
    'description' => t('The number of global constants (delta).'),
    'type' => 'integer',
    'schema field' => 'globalConstants_delta',
  );
  $properties['testClasses_delta'] = array(
    'label' => 'Test classes (delta)',
    'description' => t('The number of test classes (delta).'),
    'type' => 'integer',
    'schema field' => 'testClasses_delta',
  );
  $properties['testMethods_delta'] = array(
    'label' => 'Test methods (delta)',
    'description' => t('The number of test methods (delta).'),
    'type' => 'integer',
    'schema field' => 'testMethods_delta',
  );
  $properties['ccnByLloc_delta'] = array(
    'label' => 'ccnByLloc (delta)',
    'description' => t('ccnByLloc_delta'),
    'type' => 'decimal',
    'schema field' => 'ccnByLloc_delta',
  );
  $properties['ccnByNom_delta'] = array(
    'label' => 'ccnByNom (delta)',
    'description' => t('ccnByNom_delta'),
    'type' => 'decimal',
    'schema field' => 'ccnByNom_delta',
  );
  $properties['llocByNoc_delta'] = array(
    'label' => 'llocByNoc (delta)',
    'description' => t('llocByNoc_delta'),
    'type' => 'integer',
    'schema field' => 'llocByNoc_delta',
  );
  $properties['llocByNom_delta'] = array(
    'label' => 'llocByNom (delta)',
    'description' => t('llocByNom_delta'),
    'type' => 'integer',
    'schema field' => 'llocByNom_delta',
  );
  $properties['llocByNof_delta'] = array(
    'label' => 'llocByNof (delta)',
    'description' => t('llocByNof_delta'),
    'type' => 'integer',
    'schema field' => 'llocByNof_delta',
  );
  $properties['methodCalls_delta'] = array(
    'label' => 'Method calls (delta)',
    'description' => t('The number of method calls (delta).'),
    'type' => 'integer',
    'schema field' => 'methodCalls_delta',
  );
  $properties['staticMethodCalls_delta'] = array(
    'label' => 'Static method calls (delta)',
    'description' => t('The number of static method calls (delta).'),
    'type' => 'integer',
    'schema field' => 'staticMethodCalls_delta',
  );
  $properties['instanceMethodCalls_delta'] = array(
    'label' => 'Instance method calls (delta)',
    'description' => t('The number of instance method calls (delta).'),
    'type' => 'integer',
    'schema field' => 'instanceMethodCalls_delta',
  );
  $properties['attributeAccesses_delta'] = array(
    'label' => 'Attribute accesses (delta)',
    'description' => t('The number of attribute accesses (delta).'),
    'type' => 'integer',
    'schema field' => 'attributeAccesses_delta',
  );
  $properties['staticAttributeAccesses_delta'] = array(
    'label' => 'Static attribute accesses (delta)',
    'description' => t('The number of static attributes accesses (delta).'),
    'type' => 'integer',
    'schema field' => 'staticAttributeAccesses_delta',
  );
  $properties['instanceAttributeAccesses_delta'] = array(
    'label' => 'Instance attribute accesses (delta)',
    'description' => t('The number of instants attribute accesses (delta).'),
    'type' => 'integer',
    'schema field' => 'instanceAttributeAccesses_delta',
  );
  $properties['globalAccesses_delta'] = array(
    'label' => '"Global accesses (delta)',
    'description' => t('The number of global accesses (delta).'),
    'type' => 'integer',
    'schema field' => 'globalAccesses_delta',
  );
  $properties['globalVariableAccesses_delta'] = array(
    'label' => 'Global variable accesses (delta)',
    'description' => t('The number of global variable accesses (delta).'),
    'type' => 'integer',
    'schema field' => 'globalVariableAccesses_delta',
  );
  $properties['superGlobalVariableAccesses_delta'] = array(
    'label' => 'Super global variable accesses (delta)',
    'description' => t('The number of super global variable accesses'),
    'type' => 'integer',
    'schema field' => 'superGlobalVariableAccesses_delta',
  );
  $properties['globalConstantAccesses_delta'] = array(
    'label' => 'Global constant accesses (delta)',
    'description' => t('The number of global constant accesses (delta).'),
    'type' => 'integer',
    'schema field' => 'globalConstantAccesses_delta',
  );
  $properties['directories_delta'] = array(
    'label' => 'Directories (delta)',
    'description' => t('The number of directories (delta).'),
    'type' => 'integer',
    'schema field' => 'directories_delta',
  );
  $properties['namespaces_delta'] = array(
    'label' => 'Namespaces (delta)',
    'description' => t('The number of namespaces (delta).'),
    'type' => 'integer',
    'schema field' => 'namespaces_delta',
  );
  $properties['ncloc_delta'] = array(
    'label' => 'ncloc (delta)',
    'description' => t('ncloc_delta'),
    'type' => 'integer',
    'schema field' => 'ncloc_delta',
  );

  return $info;
}


/**
 * Access callback.
 */
function projectqa_phploc_result_delta_access($op, $projectqa_phploc_result_delta, $account = NULL, $entity_type = NULL) {
  global $user;
  if (!isset($account)) {
    $account = $user;
  }
  switch ($op) {
    case 'create':
      return user_access('administer projectqa_phploc_result_delta entities', $account)
          || user_access('create projectqa_phploc_result_delta entities', $account);
    case 'view':
      return user_access('administer projectqa_phploc_result_delta entities', $account)
          || user_access('view projectqa_phploc_result_delta entities', $account);
  }
}


/**
 * Implements hook_permission().
 */
function projectqa_phploc_result_delta_permission() {
  $permissions = array(
    'create projectqa_phploc_result_delta entities' => array(
      'title' => t('Create projectqa_phploc_result_delta'),
      'description' => t('Allows users to create projectqa_phploc_result_delta.'),
      'restrict access' => TRUE,
    ),
    'view projectqa_phploc_result_delta entities' => array(
      'title' => t('View projectqa_phploc_result_delta'),
      'description' => t('Allows users to view projectqa_phploc_result_delta.'),
      'restrict access' => TRUE,
    ),
  );
  return $permissions;
}


/**
 * PhplocResultDelta class.
 */
class PhplocResultDelta extends Entity {

  /**
   * The default label.
   *
   * @return int
   *   projectqa_phploc_result_delta prdid
   */
  protected function defaultLabel() {
    return $this->prdid;
  }

  /**
   * The default URI.
   *
   * @return array
   *   An array containing the path to the projectqa_phploc_result_delta
   */
  protected function defaultUri() {
    return array('path' => 'projectqa_phploc_result_delta/' . $this->identifier());
  }
}


/**
 * PhplocResultDeltaController class
 */
class PhplocResultDeltaController extends EntityAPIController {}
